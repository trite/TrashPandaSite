@using Data.Calendar

<td class="dayTd">
    <div class="dayContainer">
        <div class="dayNumberContainer">
            <span class="@GetDayNumberClass()">
                @dayInfo.Date.Day
            </span>
        </div>
        <div class="dayEventContainer">
            @foreach (var c in dayInfo.CalendarEvents)
            {
                <div class="@GetCalendarEventClass(c)">
                    @c.Description
                </div>
            }
        </div>
    </div>
</td>

@code {
    [Parameter]
    public DayInfo dayInfo { get; set; }

    string GetCalendarEventClass(CalendarEvent evt)
    {
        return evt.EventType switch
        {
            CalendarEventType.AttendanceAbsent => "text-danger", // "absentEvent",
            CalendarEventType.AttendanceLate => "text-warning", // "lateEvent",
            CalendarEventType.Raid => "text-info",
            CalendarEventType.Other => "text-light",
            _ => throw new Exception("Shouldn't be possible unless someone forgot to adjust this for new enum types in CalendarEventType...")
        };
    }

    string GetDayNumberClass() =>
        dayInfo.IsCurrentMonth
            ? "text-light"
            : "text-muted";
}
